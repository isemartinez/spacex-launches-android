package com.spacex.launches.data.models.local

import androidx.room.Entity
import androidx.room.PrimaryKey

/**
 * Represents a launch entity stored in the local Room database.
 * This entity contains all the information related to a specific launch, including the launch date, rocket details, payloads, and success status.
 *
 * @property id The unique ID of the launch (autogenerated by Room).
 * @property autoUpdate Whether the launch details are automatically updated.
 * @property capsules A string representing the capsules involved in the launch.
 * @property crew A string representing the crew members involved in the launch.
 * @property dateLocal The local date and time of the launch (optional).
 * @property datePrecision The precision of the launch date (e.g., year, month, day).
 * @property dateUnix The UNIX timestamp of the launch date.
 * @property dateUtc The UTC date and time of the launch (optional).
 * @property details Additional details about the launch (optional).
 * @property flightNumber The flight number of the launch.
 * @property launchId The unique launch ID assigned to this launch (optional).
 * @property launchLibraryId The ID of the launch in the Launch Library (optional).
 * @property launchpadId The ID of the launchpad used for this launch (optional).
 * @property name The name of the launch.
 * @property net Indicates whether the launch is subject to a network-enabled auto-update.
 * @property payloads A string representing the payloads involved in the launch.
 * @property rocket The ID of the rocket used for the launch (optional).
 * @property ships A string representing the ships involved in the launch.
 * @property staticFireDateUnix The UNIX timestamp of the static fire test date.
 * @property staticFireDateUtc The UTC date and time of the static fire test (optional).
 * @property success Whether the launch was successful.
 * @property tbd Indicates if the launch date is to be determined.
 * @property upcoming Indicates if the launch is upcoming.
 * @property window The launch window duration in seconds.
 */
@Entity(tableName = "launches")
internal data class LaunchEntity(
    @PrimaryKey(autoGenerate = true) val id: Long = 0,
    val autoUpdate: Boolean,
    val capsules: String,
    val crew: String,
    val dateLocal: String?,
    val datePrecision: String?,
    val dateUnix: Long,
    val dateUtc: String?,
    val details: String?,
    val flightNumber: Long,
    val launchId: String?,
    val launchLibraryId: String?,
    val launchpadId: String?,
    val name: String,
    val net: Boolean,
    val payloads: String,
    val rocket: String?,
    val ships: String,
    val staticFireDateUnix: Long,
    val staticFireDateUtc: String?,
    val success: Boolean,
    val tbd: Boolean,
    val upcoming: Boolean,
    val window: Long
)
